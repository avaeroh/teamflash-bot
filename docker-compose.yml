version: "3.8"

services:
  db:
    container_name: mongoDB
    image: ${MONGODB_IMAGE:-mongo:6.0}
    restart: always
    volumes:
      - ./data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=numberwang
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.adminCommand(\"ping\")' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  mongo-express:
    image: ${MONGOEXPRESS_IMAGE:-mongo-express:latest}
    container_name: mexpress
    env_file:
      - .env
    environment:
      - ME_CONFIG_MONGODB_URL
      - ME_CONFIG_BASICAUTH_USERNAME
      - ME_CONFIG_BASICAUTH_PASSWORD
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy

  playwright:
    image: mcr.microsoft.com/playwright:v1.55.0-jammy
    container_name: playwright
    command: ["npx","playwright","run-server","--port=8123"]
    ports:
      - "8123:8123"
    shm_size: "1gb"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8123/status || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  teamflash-bot:
    container_name: teamflash-bot
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      playwright:
        condition: service_healthy
    volumes:
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'node index.js' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
